import org.apache.tools.ant.taskdefs.condition.Os

def ndk_skipX86 = (rootProject.hasProperty("readium_ndk_skipX86") && rootProject.readium_ndk_skipX86)
def ndk_skipARM = (rootProject.hasProperty("readium_ndk_skipARM") && rootProject.readium_ndk_skipARM)
def ndk_clang = (rootProject.hasProperty("readium_ndk_clang") && rootProject.readium_ndk_clang)
def ndk_experimental = (rootProject.hasProperty("readium_ndk_experimental") && rootProject.readium_ndk_experimental)
def lcp_client_distribution_dir = rootProject.readium_lcp_client_distribution_dir

if (lcp_client_distribution_dir) {
    println "${project.name}: Using Gradle STATIC LIBRARY DEPENDENCY to build LCP lib"
    apply from: 'static_library_dependency_build.gradle'
} else if (ndk_experimental) {
    println "${project.name}: Using Gradle EXPERIMENTAL to build LCP lib"
    apply from: 'build_experimental.gradle'
} else {
    println "${project.name}: Using Gradle STABLE to build LCP lib"
}

task buildMk(type: Exec) {
    // Retrieve ndk dir
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    def ndkDir = properties.getProperty('ndk.dir', null)

    // Call ndk build
    def ndkBuildExt = Os.isFamily(Os.FAMILY_WINDOWS) ? ".cmd" : ""
    def projectPath = file('.').absolutePath
    def buildScript = (ndk_experimental) ? "Experimental.mk" : "Stable.mk"

    environment 'EPUB3_PATH', project(':epub3').projectDir

    if (ndk_skipX86) environment 'READIUM_SKIPX86', 'true'
    if (ndk_skipARM) environment 'READIUM_SKIPARM', 'true'
    if (ndk_clang) environment 'READIUM_CLANG', 'true'
    if (ndk_experimental) environment 'READIUM_DEBUG', 'true'

    commandLine "$ndkDir/ndk-build${ndkBuildExt}",
            "-j", "4", //Runtime.runtime.availableProcessors()
            '-C', projectPath,
            'NDK_APPLICATION_MK=Application.mk',
            "APP_BUILD_SCRIPT=${buildScript}",
            "NDK_PROJECT_PATH=${projectPath}",
            "NDK_DEBUG=1"
}

tasks.whenTaskAdded { task ->
    def taskName = task.name

    if (taskName.startsWith("compile")) {

        if (ndk_experimental) {
            println "${project.name} - ${taskName}: Using Gradle EXPERIMENTAL, no need to invoke external NDK / Makefile to build LCP lib"
        } else {
            task.dependsOn "buildMk"
        }
    }
}
